[user]
	email = ville.rasanen@gmail.fi
[core]
	editor = code --wait
[alias]
	ch = checkout
	ac = !git status && git add -p && git commit
	aa = !git status && git add -p && git commit --amend
	behead = reset --hard HEAD
	amend = commit --amend
	meco = merge --continue
	redo = "!f() { git checkout ${1-develop} && git pull && git checkout - && git rebase ${1-develop}; }; f"
	reco = rebase --continue
	rebo = rebase --abort
	remast = !git redo master
	redev = !git redo develop
	restag = !git redo staging
	reonto = "!f() { onto=${1:-develop}; mergebase=$(git merge-base HEAD ${onto}); git rebase --onto ${onto} ${2:-${mergebase}}; }; f"
	rein = "!f() { git rebase -i $(git merge-base HEAD ${1:-develop}); }; f"
	st = status
	force = push --force-with-lease origin HEAD
	brf = "!f() { git fetch origin; git checkout ${1}; git checkout -; git branch -f ${1} HEAD; git checkout ${1}; }; f"
	b = ! git br
	head = push origin HEAD
	cd = checkout develop
	cs = checkout staging
	cb = checkout -
	br = !git for-each-ref --color=always --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | tail -15
	lg = log --oneline --decorate --color --graph
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	g = lg1
	fetcha = fetch --all
	fa = fetch --all
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
[push]
	default = current
